// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<App/> renders 1`] = `
<ApolloProvider
  client={
    ApolloClient {
      "cache": InMemoryCache {
        "addTypename": true,
        "config": Object {
          "addTypename": true,
          "dataIdFromObject": [Function],
          "fragmentMatcher": HeuristicFragmentMatcher {},
          "storeFactory": [Function],
        },
        "data": ObjectCache {
          "data": Object {},
        },
        "optimistic": Array [],
        "silenceBroadcast": false,
        "watches": Array [],
      },
      "defaultOptions": Object {},
      "disableNetworkFetches": false,
      "link": ApolloLink {
        "request": [Function],
      },
      "mutate": [Function],
      "query": [Function],
      "queryDeduplication": true,
      "reFetchObservableQueries": [Function],
      "resetStore": [Function],
      "resetStoreCallbacks": Array [],
      "ssrMode": false,
      "store": DataStore {
        "cache": InMemoryCache {
          "addTypename": true,
          "config": Object {
            "addTypename": true,
            "dataIdFromObject": [Function],
            "fragmentMatcher": HeuristicFragmentMatcher {},
            "storeFactory": [Function],
          },
          "data": ObjectCache {
            "data": Object {},
          },
          "optimistic": Array [],
          "silenceBroadcast": false,
          "watches": Array [],
        },
      },
      "version": "2.2.3",
      "watchQuery": [Function],
    }
  }
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <BrowserRouter>
    <Appstyled__AppRoot>
      <Route
        component={[Function]}
        exact={true}
        path="/"
      />
      <Route
        component={[Function]}
        path="/page-example"
      />
    </Appstyled__AppRoot>
  </BrowserRouter>
</ApolloProvider>
`;
